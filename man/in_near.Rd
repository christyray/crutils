% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/in-near.R
\name{in_near}
\alias{in_near}
\alias{in_near_infix}
\alias{\%~\%}
\title{Determine if values are members of a vector}
\usage{
in_near(x, y, tol = 1e-12)

x \%~\% y
}
\arguments{
\item{x}{Numeric vector with the values to be matched}

\item{y}{Numeric vector with the values to be matched against}

\item{tol}{Relative tolerance of comparison; default value is \code{1e-12}}
}
\value{
A logical vector the same length as \code{x} indicating the values of
\code{x} that exist in \code{y} within the relative tolerance
}
\description{
\code{in_near()} determines if the numbers in one vector occur anywhere in the
second vector, checking equality within a relative tolerance value.

\verb{\%~\%} is an infix operator shortcut for \code{in_near()}.
}
\details{
These functions are similar to \code{\link[base]{\%in\%}} except that they
check for equality within a relative tolerance rather than exact equality.
Uses \code{1e-12} as the default tolerance because the \code{ismembertol}
function from MATLAB uses \code{1e-12} as the tolerance for double-precision
floating point numbers.
}
\examples{
x <- c(1, 1 + 1e-2, 1 + 1e-16, 2, 3, 10, 10 + 10e-2, 10 + 10e-16)
y <- c(1, 10)

in_near(x, y)
in_near(x, y, tol = 1e-1)

x \%~\% y
}
\seealso{
\code{\link[=pair_near]{pair_near()}} to determine if values in two vectors are pairwise
equal within a relative tolerance
}
